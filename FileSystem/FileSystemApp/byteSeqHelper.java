package FileSystemApp;

/**
 * FileSystemApp/byteSeqHelper.java . Generated by the IDL-to-Java compiler
 * (portable), version "3.2" from FileSystem.idl Thursday, November 10, 2016
 * 5:57:37 PM EST
 */

abstract public class byteSeqHelper
{
	private static String _id = "IDL:FileSystemApp/byteSeq:1.0";

	/**
	 * insert a byte array into our output stream
	 * @param a our corba object
	 * @param that the byte array
	 */
	public static void insert(org.omg.CORBA.Any a, byte[] that)
	{
		org.omg.CORBA.portable.OutputStream out = a.create_output_stream();
		a.type(type());
		write(out, that);
		a.read_value(out.create_input_stream(), type());
	}

	/**
	 * Read a byte array from our corba object
	 * @param a our corba object
	 * @return the byte array
	 */
	public static byte[] extract(org.omg.CORBA.Any a)
	{
		return read(a.create_input_stream());
	}

	private static org.omg.CORBA.TypeCode __typeCode = null;

	/**
	 * @return a byteSeq type code
	 */
	synchronized public static org.omg.CORBA.TypeCode type()
	{
		if (__typeCode == null)
		{
			__typeCode = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);
			__typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0, __typeCode);
			__typeCode = org.omg.CORBA.ORB.init().create_alias_tc(FileSystemApp.byteSeqHelper.id(), "byteSeq",
					__typeCode);
		}
		return __typeCode;
	}

	/**
	 * @return our id
	 */
	public static String id()
	{
		return _id;
	}

	/**
	 * Read a byte array from our input stream
	 * @param istream input stream
	 * @return a byte array
	 */
	public static byte[] read(org.omg.CORBA.portable.InputStream istream)
	{
		byte value[] = null;
		int _len0 = istream.read_long();
		value = new byte[_len0];
		istream.read_octet_array(value, 0, _len0);
		return value;
	}

	/**
	 * write a byte array to our output stream
	 * @param ostream our output stream
	 * @param value the byte array we want to write
	 */
	public static void write(org.omg.CORBA.portable.OutputStream ostream, byte[] value)
	{
		ostream.write_long(value.length);
		ostream.write_octet_array(value, 0, value.length);
	}

}
